{
  "configs.config.nav.systemStatus": "System status",
  "configs.systemStatus.title": "System status",
  "configs.systemStatus.description": "Review debugging, cache, and logging flags that shape backend behaviour.",
  "configs.systemStatus.loading": "Loading status snapshot…",
  "configs.systemStatus.error": "Failed to load system status",
  "configs.systemStatus.retry": "Retry",
  "configs.systemStatus.invalidResponse": "Unexpected response when loading system status",
  "configs.systemStatus.state.enabled": "Enabled",
  "configs.systemStatus.state.disabled": "Disabled",
  "configs.systemStatus.state.set": "Set",
  "configs.systemStatus.state.unset": "Not set",
  "configs.systemStatus.state.unknown": "Unknown",
  "configs.systemStatus.value.notSet": "Not set",
  "configs.systemStatus.boolean.true": "True",
  "configs.systemStatus.boolean.false": "False",
  "configs.systemStatus.boolean.custom": "Custom value",
  "configs.systemStatus.details.currentValue": "Current value",
  "configs.systemStatus.details.defaultValue": "Default",
  "configs.systemStatus.details.updateHint": "Update by running `export {{key}}=value` or editing `.env`, then restart the app.",
  "configs.systemStatus.details.updateDocs": "Environment configuration guide",
  "configs.systemStatus.viewDocs": "View documentation",
  "configs.systemStatus.generatedAt": "Snapshot generated {{timestamp}}",
  "configs.systemStatus.actions.purgeCache": "Purge cache",
  "configs.systemStatus.actions.purgeCacheLoading": "Purging…",
  "configs.systemStatus.actions.purgeCacheConfirm": "Purge all cached data now? This clears cache entries across every tenant.",
  "configs.systemStatus.actions.purgeCacheSuccess": "Cache cleared.",
  "configs.systemStatus.actions.purgeCacheSuccessWithCount": "Cache cleared ({{count}} entries).",
  "configs.systemStatus.actions.purgeCacheError": "Failed to purge cache.",
  "configs.systemStatus.actions.purgeCacheUnavailable": "Cache service is unavailable.",
  "configs.config.nav.cache": "Cache",
  "configs.cache.title": "Cache overview",
  "configs.cache.description": "Inspect cached CRUD responses and clear segments when necessary.",
  "configs.cache.loading": "Loading cache statistics…",
  "configs.cache.loadError": "Failed to load cache statistics.",
  "configs.cache.retry": "Retry",
  "configs.cache.refresh": "Refresh",
  "configs.cache.generatedAt": "Stats generated {{timestamp}}",
  "configs.cache.totalEntries": "{{count}} cached entries",
  "configs.cache.empty": "No cached CRUD responses for this tenant.",
  "configs.cache.purgeAll": "Purge all cache",
  "configs.cache.purgeAllLoading": "Purging…",
  "configs.cache.purgeAllConfirm": "Purge all cached entries for this tenant?",
  "configs.cache.purgeAllSuccess": "Cache cleared.",
  "configs.cache.purgeSegment": "Purge segment",
  "configs.cache.purgeSegmentLoading": "Purging…",
  "configs.cache.purgeSegmentConfirm": "Purge cached entries for this segment?",
  "configs.cache.purgeSegmentSuccess": "Segment {{segment}} cache cleared ({{count}} keys removed).",
  "configs.cache.purgeError": "Failed to purge cache segment.",
  "configs.cache.unavailable": "Cache service is unavailable.",
  "configs.cache.table.segment": "Segment",
  "configs.cache.table.path": "Path",
  "configs.cache.table.pathUnknown": "n/a",
  "configs.cache.table.method": "Method",
  "configs.cache.table.count": "Cached keys",
  "configs.cache.table.countValue": "{{count}} keys",
  "configs.cache.table.actions": "Actions",
  "configs.systemStatus.categories.profiling": "Profiling",
  "configs.systemStatus.categories.profilingDescription": "Flags that control request and query profiling outputs.",
  "configs.systemStatus.categories.logging": "Logging",
  "configs.systemStatus.categories.loggingDescription": "Tune verbosity and SQL logging for diagnostics.",
  "configs.systemStatus.categories.caching": "Caching",
  "configs.systemStatus.categories.cachingDescription": "Cache providers and TTL controls for backend responses.",
  "configs.systemStatus.categories.queryIndex": "Query index",
  "configs.systemStatus.categories.queryIndexDescription": "Controls for query index maintenance and safety nets.",
  "configs.systemStatus.categories.entities": "Entities",
  "configs.systemStatus.categories.entitiesDescription": "Compatibility toggles for custom entity persistence.",
  "configs.systemStatus.variables.omProfile.label": "Tree profiler filters",
  "configs.systemStatus.variables.omProfile.description": "Comma separated filters enabling the backend tree profiler.",
  "configs.systemStatus.variables.nextPublicOmProfile.label": "Frontend profiler filters",
  "configs.systemStatus.variables.nextPublicOmProfile.description": "Browser-side flag enabling the tree profiler from the client bundle.",
  "configs.systemStatus.variables.omCrudProfile.label": "CRUD profiler filters",
  "configs.systemStatus.variables.omCrudProfile.description": "Filters enabling detailed CRUD profiling payloads.",
  "configs.systemStatus.variables.omQeProfile.label": "Query engine profiler filters",
  "configs.systemStatus.variables.omQeProfile.description": "Filters enabling hybrid query engine profiling snapshots.",
  "configs.systemStatus.variables.queryEngineDebugSql.label": "Query engine SQL debug",
  "configs.systemStatus.variables.queryEngineDebugSql.description": "Log raw SQL generated by the hybrid query engine.",
  "configs.systemStatus.variables.logVerbosity.label": "Log verbosity",
  "configs.systemStatus.variables.logVerbosity.description": "Overrides structured log verbosity such as debug or trace.",
  "configs.systemStatus.variables.logLevel.label": "Log level",
  "configs.systemStatus.variables.logLevel.description": "Fallback log level applied when verbosity is not set.",
  "configs.systemStatus.variables.enableCrudApiCache.label": "CRUD API cache",
  "configs.systemStatus.variables.enableCrudApiCache.description": "Enable the CRUD API response cache layer.",
  "configs.systemStatus.variables.cacheStrategy.label": "Cache strategy",
  "configs.systemStatus.variables.cacheStrategy.description": "Cache backend strategy (memory, sqlite, redis…).",
  "configs.systemStatus.variables.cacheTtl.label": "Cache TTL",
  "configs.systemStatus.variables.cacheTtl.description": "Default cache time-to-live in milliseconds.",
  "configs.systemStatus.variables.cacheSqlitePath.label": "Cache SQLite path",
  "configs.systemStatus.variables.cacheSqlitePath.description": "Filesystem path for the SQLite cache file.",
  "configs.systemStatus.variables.scheduleAutoReindex.label": "Auto reindex",
  "configs.systemStatus.variables.scheduleAutoReindex.description": "Automatically schedule query index reindex jobs when gaps appear.",
  "configs.systemStatus.variables.optimizeIndexCoverageStats.label": "Skip coverage recalculation",
  "configs.systemStatus.variables.optimizeIndexCoverageStats.description": "Skip immediate coverage recalculation during read operations.",
  "configs.systemStatus.variables.forceQueryIndexOnPartialIndexes.label": "Force partial index usage",
  "configs.systemStatus.variables.forceQueryIndexOnPartialIndexes.description": "Serve query index results even when coverage is partial.",
  "configs.systemStatus.variables.entitiesBackcompatEav.label": "Legacy EAV writes",
  "configs.systemStatus.variables.entitiesBackcompatEav.description": "Mirror custom entity writes into the legacy EAV tables."
}
